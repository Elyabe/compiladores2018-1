/* Generated By:JavaCC: Do not edit this line. CompiladorConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CompiladorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EXIBE = 8;
  /** RegularExpression Id. */
  int LEITURA = 9;
  /** RegularExpression Id. */
  int LEITURACOMPLETA = 10;
  /** RegularExpression Id. */
  int SE = 11;
  /** RegularExpression Id. */
  int SENAO = 12;
  /** RegularExpression Id. */
  int FIMSE = 13;
  /** RegularExpression Id. */
  int ENQUANTO = 14;
  /** RegularExpression Id. */
  int FIMENQUANTO = 15;
  /** RegularExpression Id. */
  int PARA = 16;
  /** RegularExpression Id. */
  int FIMPARA = 17;
  /** RegularExpression Id. */
  int SELETOR = 18;
  /** RegularExpression Id. */
  int FIMSELETOR = 19;
  /** RegularExpression Id. */
  int CASO = 20;
  /** RegularExpression Id. */
  int FIMCASO = 21;
  /** RegularExpression Id. */
  int FACA = 22;
  /** RegularExpression Id. */
  int FAZERENQUANTO = 23;
  /** RegularExpression Id. */
  int REPEAT = 24;
  /** RegularExpression Id. */
  int FIMREPEAT = 25;
  /** RegularExpression Id. */
  int SEREPETE = 26;
  /** RegularExpression Id. */
  int FIMSEREPETE = 27;
  /** RegularExpression Id. */
  int DUPLO = 28;
  /** RegularExpression Id. */
  int FIMDUPLO = 29;
  /** RegularExpression Id. */
  int MATRIX3D = 30;
  /** RegularExpression Id. */
  int FIMMATRIX3D = 31;
  /** RegularExpression Id. */
  int MAX = 32;
  /** RegularExpression Id. */
  int MIN = 33;
  /** RegularExpression Id. */
  int FUNCAO = 34;
  /** RegularExpression Id. */
  int FIMFUNCAO = 35;
  /** RegularExpression Id. */
  int PROCEDIMENTO = 36;
  /** RegularExpression Id. */
  int FIMPROCEDIMENTO = 37;
  /** RegularExpression Id. */
  int MAIN = 38;
  /** RegularExpression Id. */
  int COMENTLINHA = 39;
  /** RegularExpression Id. */
  int NUMERO = 40;
  /** RegularExpression Id. */
  int PALAVRA = 41;
  /** RegularExpression Id. */
  int DIGIT = 42;
  /** RegularExpression Id. */
  int NUM = 43;
  /** RegularExpression Id. */
  int SOMA = 44;
  /** RegularExpression Id. */
  int SUB = 45;
  /** RegularExpression Id. */
  int MUL = 46;
  /** RegularExpression Id. */
  int DIV = 47;
  /** RegularExpression Id. */
  int POT = 48;
  /** RegularExpression Id. */
  int LOG = 49;
  /** RegularExpression Id. */
  int OU = 50;
  /** RegularExpression Id. */
  int OUEXCLUSIVO = 51;
  /** RegularExpression Id. */
  int NEGACAO = 52;
  /** RegularExpression Id. */
  int E = 53;
  /** RegularExpression Id. */
  int ATRIB = 54;
  /** RegularExpression Id. */
  int ATRIBMULT = 55;
  /** RegularExpression Id. */
  int IGUAL = 56;
  /** RegularExpression Id. */
  int DIFERENTE = 57;
  /** RegularExpression Id. */
  int CONCAT = 58;
  /** RegularExpression Id. */
  int MENOR = 59;
  /** RegularExpression Id. */
  int MAIORIGUAL = 60;
  /** RegularExpression Id. */
  int TO = 61;
  /** RegularExpression Id. */
  int EXIBELN = 62;
  /** RegularExpression Id. */
  int TERNARIO = 63;
  /** RegularExpression Id. */
  int CHAR = 64;
  /** RegularExpression Id. */
  int AP = 65;
  /** RegularExpression Id. */
  int FP = 66;
  /** RegularExpression Id. */
  int AC = 67;
  /** RegularExpression Id. */
  int FC = 68;
  /** RegularExpression Id. */
  int PV = 69;
  /** RegularExpression Id. */
  int DP = 70;
  /** RegularExpression Id. */
  int VIRGULA = 71;
  /** RegularExpression Id. */
  int STRING = 72;
  /** RegularExpression Id. */
  int VAR = 73;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int comentarioGeral = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 7>",
    "\"exibe\"",
    "\"le\"",
    "\"lecompleto\"",
    "\"se\"",
    "\"senao\"",
    "\"fim-se\"",
    "\"enquanto\"",
    "\"fim-enquanto\"",
    "\"para\"",
    "\"fim-para\"",
    "\"seletor\"",
    "\"fim-seletor\"",
    "\"caso\"",
    "\"fim-caso\"",
    "\"faca\"",
    "\"fazer-enquanto\"",
    "\"repeat\"",
    "\"fim-repeat\"",
    "\"se-repete\"",
    "\"fim-se-repete\"",
    "\"duplo\"",
    "\"fim-duplo\"",
    "\"matrix3D\"",
    "\"fim-matrix3D\"",
    "\"max\"",
    "\"min\"",
    "\"funcao\"",
    "\"fim-funcao\"",
    "\"procedimento\"",
    "\"fim-procedimento\"",
    "\"cirocracia\"",
    "<COMENTLINHA>",
    "\"numero\"",
    "\"palavra\"",
    "<DIGIT>",
    "<NUM>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"**\"",
    "\"log\"",
    "\"OU\"",
    "\"XOU\"",
    "\"NAO\"",
    "\"E\"",
    "\"<-\"",
    "\"<==\"",
    "\"=\"",
    "\"!=\"",
    "\"&\"",
    "\"<\"",
    "\">=\"",
    "\"to\"",
    "\"exibeln\"",
    "\"?\"",
    "<CHAR>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "<STRING>",
    "<VAR>",
  };

}
